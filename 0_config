#!/usr/bin/env bash
#
# This file will be sourced by:
# '1_run-livecd.bash'
# 'source/config-fish.fish'
#
# It is used to set up the required variables and settings 
# for the rest of the scripts to function.
#
# Boolean settings are just being tested against case insensitive 'true' like below:
# 
######## Bash:
### if [[ ${var,,} =~ ^true$ ]]; then
###     ~do something~
### fi
#
#
######## Fish:
### if string match -rqi '^true$' $var
###     ~do something~
### end
#
# So when changing the values you only have to consider if it is 'true' or 'anything but true'
#

# Print a lot of information
export ZAI_VERBOSE='true'

# What to set the hostname of the system to,
# no attempt is made to sanity check this
# so be careful with what you set it to
export ZAI_NAME='kito'

# The specific timezone the machine should use, this should be a valid
# file when /usr/share/zoneinfo/ is prepended to it
#
# For example if your timezone was /usr/share/zoneinfo/Australia/Victoria 
# you would put: 
# export ZAI_TIME='Australia/Victoria'
export ZAI_TIME='Australia/Victoria'

# The list of locales to enable, needs to exactly match what is listed 
# inside /etc/locale.gen so I recommended you double check that first
#
# Eg: export ZAI_LOCALE=('en_AU.UTF-8 UTF-8' 'en_US.UTF-8 UTF-8' 'ja_JP.UTF-8 UTF-8')
export ZAI_LOCALE=('en_AU.UTF-8 UTF-8' 'en_US.UTF-8 UTF-8' 'ja_JP.UTF-8 UTF-8')

# At some points the installation will pause to allow you to check the result of important
# actions and abort '<Ctrl> + C' if you don't like the look of one of the responses
#
# This allows you to skip those pauses and just have the script go through everything without blocking
export ZAI_PAUSESKIP='false'

# This stops any errors from aborting installation, 
# we will continue till something explodes
#
# Not recommended unless you are debugging
export ZAI_IGNOREFAIL='false'

# Should we create symlinks to ease testing inside a VM and any 
# other measures that would simplify the debug process inside a VM
export ZAI_VMDEGUB='true'

# Allow some lazy uses of 'sed' which could potentially be destructive
# it is disabled by default to prevent unintended behaviour but can be
# turned on with this toggle if some edge case is causing issues
export ZAI_LAZYSED='false'

#############################################
## Kernel Settings ##########################

# The name of the kernel you want to use for installation
# as it is listed in the package database
#
# Eg: export ZAI_KERNEL='linux'
export ZAI_KERNEL='linux-pure-bcachefs-git'

# Name of the kernels '-docs' package
# and if it should be installed
export ZAI_KERNEL_DOCS='linux-pure-bcachefs-git-docs'
export ZAI_KERNEL_DOCS_INSTALL='false'

# Name of the kernels '-headers' package
# and if it should be installed
export ZAI_KERNEL_HEADERS='linux-pure-bcachefs-git-headers'
export ZAI_KERNEL_HEADERS_INSTALL='true'

#############################################
## Systemd Settings #########################

# An array of services to enable once installation is complete
export ZAI_SYS_ENABLE=( 'ly' 'NetworkManager' 'auditd' 'sshd' 'libvirtd' 'reflector' )

# An array of services to disable once installation is complete
export ZAI_SYS_DISABLE=( 'getty@tty2' )

# An array of services to mask once installation is complete
export ZAI_SYS_MASK=( 'getty@tty2' )

#############################################
## Pacman Settings ##########################

# Should we enable multilib support in pacman
export ZAI_PKG_MULTILIB='true'

# Should we use a local repo instead of trying to build packages locally
export ZAI_PKG_LOCALREPO='true'

# The amount of parallel downloads which should be used
export ZAI_PKG_PD='16'

# The amount of parallel downloads which should be used for 'reflector'
export ZAI_PKG_PD_REFLECT='16'

# Patch pacman.conf to resolve an issue with powerpill
export ZAI_PKG_POWERPILL='true'

# Should we update the 'makepkg.conf' with some optimised values
export ZAI_PKG_OPTIMISE='true'

# This enabled a function that attempts to agressively clean any
# orphans after installation, however it is a bit over-aggressive
# so is disabled by default
export ZAI_PKG_CLEAN='false'

# Enable 'auto-key-retrieve' for pacman on new installation
# This is enabled by default during the livecd to avoid issues of GPG 
# prompting for user input but is not needed in the installed environment
#
# Go to the below URL for more information:
# https://wiki.archlinux.org/title/GnuPG#Searching_and_receiving_keys 
#
export ZAI_PKG_AUTOKEY='true'

# Same as above but instead applies 'auto-key-retrieve' 
# to the users personal gpg.conf instead
export ZAI_PKG_AUTOKEY_USER='true' # WIP

#############################################
## Block Device Settings ####################

# The block device to be formatted, for example if
# your hardrive is '/dev/sda' you would set this to 'sda'
export ZAI_BLK='nvme0n1'

# Some block devices (like NVMe drives) end with a number,
# to avoid confusion when interacting with these devices
# their partitions have a prefix to make them distinct
# 
# In simple terms, if your block device looks like
# /dev/nvme0n1 and your first partition on that device is
# /dev/nvme0n1p1 then you should set this to 'p'
# 
# Seting it to '' is supported if your block device
# dosen't use or need a partition prefix
export ZAI_BLK_PP='p'

# Should we encrypt the partitions
export ZAI_BLK_CRYPT='true'  # WIP

# Does this drive support 'discard' and if so should we enable it
export ZAI_BLK_DISCARD='true'  # WIP

