#!/usr/bin/env bash
#
# This file will be sourced by:
# '1_run-livecd.bash'
# 'source/config-fish.fish'
#
# It is used to set up the required variables and settings 
# for the rest of the scripts to function.
#
# Boolean settings are just being tested against case insensitive 'true' like below:
# 
######## Bash:
### if [[ ${var,,} =~ ^true$ ]]; then
###     ~do something~
### fi
#
#
######## Fish:
### if string match -rqi '^true$' $var
###     ~do something~
### end
#
# So when changing the values you only have to consider if it is 'true' or 'anything but true'
#

# Should we print a lot of likely unhelpful information
export ZAI_VERBOSE='true'

# What to set the hostname of the system to,
# no attempt is made to sanity check this
# so be careful with what you set it to
export ZAI_NAME='kito'

# The specific timezone the machine should use, this should be a valid
# file when /usr/share/zoneinfo/ is prepended to it
#
# For example if your timezone was /usr/share/zoneinfo/Australia/Victoria 
# you would put: 
# export ZAI_TIME='Australia/Victoria'
export ZAI_TIME='Australia/Victoria'

# The list of locales to enable, needs to exactly match what is listed 
# inside /etc/locale.gen so I recommended you double check that first
#
# Eg: export ZAI_LOCALE=('en_AU.UTF-8 UTF-8' 'en_US.UTF-8 UTF-8' 'ja_JP.UTF-8 UTF-8')
export ZAI_LOCALE=('en_AU.UTF-8 UTF-8' 'en_US.UTF-8 UTF-8' 'ja_JP.UTF-8 UTF-8')

# At some points the installation will pause to allow you to check the result of important
# actions and abort '<Ctrl> + C' if you don't like the look of one of the responses
#
# This allows you to skip those pauses and just have the script go through everything without blocking
export ZAI_PAUSESKIP='false'

# This stops any errors from aborting installation, 
# we will continue till something explodes
#
# Not recommended unless you are debugging
export ZAI_IGNOREFAIL='false'

# Should we create symlinks to ease testing inside a VM and any 
# other measures that would simplify the debug process inside a VM
export ZAI_VMDEGUB='true'

#############################################
## REGEX Settings ###########################

# This control if we should reget package names from the list
# that don't match the offical arch naming convetion:
# 	https://wiki.archlinux.org/title/Arch_package_guidelines#Package_naming
#
# If 'true' bad names are removed from the pkglist when processed, if 'false'
# we assume that a valid name is a substring of the name given and try to 
# extract it with relaxed rules
export ZAI_REX_STRICTPKG='true'

# Allow some lazy uses of 'sed' which could potentially be destructive
# it is disabled by default to prevent unintended behaviour but can be
# turned on with this toggle if some edge case is causing issues
export ZAI_LAZYSED='false'

#############################################
## User Account Settings ####################

# List of normal users to create
export ZAI_USERS=( 'zaiju' ) #WIP

# List of users that should be given sudo powers
#
# This should be a subset of $ZAI_USERS since
# it only affects the groups added and dosen't
# create any further accounts
export ZAI_USERS_SUDOS=( 'zaiju' ) #WIP

# The user which will have their password set as part of the
# setup and installation process, other users will need to have
# their password updated manually
#
export ZAI_USERS_ADMIN='zaiju'

# List of system users that should be created
# 
# System users are not added to any secondary groups
# so you may need to add them to various groups to
# achieve their purpose
#
# Supports adding a comment during user
# creation with the use of ':'
#
# For example if you had:
# 	export ZAI_USERS_SYSTEM=( 'rsync:rsync deamon' )	
#
# That would be created with the following options:
# 	--shell '/usr/bin/nologin'
# 	--no-create-home
# 	--system
# 	--user-group
# 	--home-dir '/'
# 	--comment "rsync deamon"
#
# The comment portion is skipped if there is no ':'
#
export ZAI_USERS_SYSTEM=( 'zaiju' ) #WIP

# List of groups all users should get
export ZAI_USERS_GROUPS=( 'steam' 'psd' 'download' ) #WIP

# List of groups only sudos should get
#
# Of note, you do not need to specifc the sudoers group (wheel, sudos) 
# in this list, it will be automatically resolved
#
export ZAI_USERS_GROUPS_SUDOS=( 'libvirt' 'audit' 'hydrus' 'lanraragi' ) #WIP

#############################################
## Sudoers Settings #########################

# Remove the 'wheel' group from the sudoers file
export ZAI_SUDO_DISABLE_WHEEL='true' # WIP

# If not blank a new group is created that is functionally
# identical to 'wheel' but with a different name
export ZAI_SUDO_ADD_GROUP='sudos' # WIP

#############################################
## Transient File Storage ###################

# Specify the location backups should be saved
# leave blank to default to '$ZAI_DIR/backups'
export ZAI_BACKUPS_DIR='' # WIP

# Specify the location logs should be saved
# leave blank to default to '$ZAI_DIR/logs'
export ZAI_LOGS_DIR='' # WIP

#############################################
## AUR Settings #############################

# Use 'paru' to install AUR packages rather
# then manually installing them with 'makepkg'
#
# This has the advantage of allowing recursive 
# AUR dependency resolution which we don't do
# if we are manually installing with 'makepkg'
export ZAI_AUR_PARU='true'

# If we should remove the 'aur' user, created to allow
# livecd compilation, once installation is complete
export ZAI_AUR_REMOVEUSER='false'

# Should we use a local repo instead of trying to build packages locally
export ZAI_AUR_LOCALREPO='true'

# The name the local repo should be listed as, defaults to 'repo' if blank
export ZAI_AUR_LOCALREPO_NAME='' # WIP

# The path to the local repo, specifically where it is located in the filesystem
# If blank it defaults to '/repo'
export ZAI_AUR_LOCALREPO_PATH='' # WIP

#############################################
## Kernel Settings ##########################

# The name of the kernel you want to use for installation
# as it is listed in the package database
#
# If you plan on using multiple kernels put your 'default'
# one here and the rest in the relevant 'pkglist.list'
#
# Eg: export ZAI_KERNEL='linux'
export ZAI_KERNEL='linux'
#export ZAI_KERNEL='linux-pure-bcachefs-git'

# Name of the kernels '-docs' package
# and if it should be installed
export ZAI_KERNEL_DOCS='linux-pure-bcachefs-git-docs'
export ZAI_KERNEL_DOCS_INSTALL='false'

# Name of the kernels '-headers' package
# and if it should be installed
export ZAI_KERNEL_HEADERS='linux-headers'
#export ZAI_KERNEL_HEADERS='linux-pure-bcachefs-git-headers'
export ZAI_KERNEL_HEADERS_INSTALL='true'

#############################################
## Systemd Settings #########################

# An array of services to enable once installation is complete
export ZAI_SYS_ENABLE=( 'ly' 'NetworkManager' 'auditd' 'sshd' 'libvirtd' 'reflector' )

# An array of services to disable once installation is complete
export ZAI_SYS_DISABLE=( 'getty@tty2' )

# An array of services to mask once installation is complete
export ZAI_SYS_MASK=( 'getty@tty2' )

#############################################
## Pacman Settings ##########################

export ZAI_PKG_STRICT_NAMEING='true'

# Should we enable multilib support in pacman
export ZAI_PKG_MULTILIB='true'

# The amount of parallel downloads which should be used
export ZAI_PKG_PD='16'

# The amount of parallel downloads which should be used for 'reflector'
export ZAI_PKG_PD_REFLECT='16'

# Patch pacman.conf to resolve an issue with powerpill
export ZAI_PKG_POWERPILL='true'

# Should we update the 'makepkg.conf' with some optimised values
export ZAI_PKG_OPTIMISE='true'

# This enables a function that attempts to agressively clean any
# orphans after installation, however it is a bit over-aggressive
# so is disabled by default
export ZAI_PKG_CLEAN='false'

# Enable 'auto-key-retrieve' for pacman on new installation, this is 
# enabled by default during the livecd to avoid issues of GPG prompting 
# for user input but is a matter of preference for the installed environment
#
# Go to the below URL for more information:
# https://wiki.archlinux.org/title/GnuPG#Searching_and_receiving_keys 
#
export ZAI_PKG_AUTOKEY='true'

# Same as above but instead applies 'auto-key-retrieve' to the
# users personal gpg.conf instead, useful for makepkg usage
export ZAI_PKG_AUTOKEY_USER='true' # WIP

# Should the 'aur' system user have their GPG settings changed
# regardless of the above options
export ZAI_PKG_AUTOKEY_AUR='true' # WIP

#############################################
## Block Device Settings ####################

# The block device to be formatted, for example if
# your hardrive is '/dev/sda' you would set this to 'sda'
export ZAI_BLK='nvme0n1'

# Some block devices (like NVMe drives) end with a number,
# to avoid confusion when interacting with these devices
# their partitions have a prefix to make them distinct
# 
# In simple terms, if your block device looks like
# /dev/nvme0n1 and your first partition on that device is
# /dev/nvme0n1p1 then you should set this to 'p'
# 
# Seting it to '' is supported if your block device
# dosen't use or need a partition prefix
export ZAI_BLK_PP='p'

# Should we encrypt the partitions
export ZAI_BLK_CRYPT='true'  # WIP

# Does this drive support 'discard' and if so should we enable it
export ZAI_BLK_DISCARD='true'  # WIP

